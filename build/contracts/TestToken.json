{
  "contractName": "TestToken",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_balances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "extractETHIfStuck",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "extractTokenIfStuck",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"extractETHIfStuck\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"extractTokenIfStuck\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/merun/Desktop/yeld & crypto/yeld-contracts/contracts/TestToken.sol\":\"TestToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"/C/Users/merun/Desktop/yeld & crypto/yeld-contracts/contracts/ERC20UpgradeSafe.sol\":{\"keccak256\":\"0x085814835d6a37d2d623b0c45992f0e2f21fdbc8fe23c5f122f78957fab72378\",\"urls\":[\"bzz-raw://02ae15b3172fd527739b658f619935e47657f94eb4ba5502e751a6ef84c701f6\",\"dweb:/ipfs/QmbCnxR35FvsPErTnmVtSS2EkAPGJxxdFzP1R4HkNircW2\"]},\"/C/Users/merun/Desktop/yeld & crypto/yeld-contracts/contracts/TestToken.sol\":{\"keccak256\":\"0x7aa74956c82f91d8032a80422ad841ca87c7c163bdb502bccd87c747714be830\",\"urls\":[\"bzz-raw://ef680d1f823767fd12c5d4a41250d37304d01bc08b1933cb3d7283e8e686852e\",\"dweb:/ipfs/QmddZ4jdxfiuQN2DcJCrtskDcvJ3YNhk5Lh2K8iA5mKjjE\"]},\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0xe81686511d62f18b2d9c693c2c94c0a789c690de63aa90e15451ebf65c5bfd3e\",\"urls\":[\"bzz-raw://1332ee1d2b096456bf2e5795b5871d0fed47be6a31c9a2f2cef9206a299565ea\",\"dweb:/ipfs/Qmdu1847Y4UL3gTjbLUManMGfxYEoyGPSodM3Br89SKzwx\"]},\"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]},\"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":{\"keccak256\":\"0x04a69a78363214b4e3055db8e620bed222349f0c81e9d1cbe769eb849b69b73f\",\"urls\":[\"bzz-raw://b3115459376196d6c2c3817439c169d9b052b27b70e8ee2e28963cda760736da\",\"dweb:/ipfs/QmXaNF5rmcDSAzBiFMQjf979qb9xNXqD9eZtgo4uM9VEis\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x6cc1cb934a3ac2137a7dcaed018af9e235392236ceecfd3687259702b9c767ad\",\"urls\":[\"bzz-raw://0055fa88138cd1c3c6440370f8580f85857f8fe9dec41c99af9eafbeb8d9c3ce\",\"dweb:/ipfs/QmX1xDh8vwGLLCH8ti45eXjQ7Wcxv1FEGTR3jkFnd5Nv6F\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0x5f7da58ee3d9faa9b8999a93d49c8ff978f1afc88ae9bcfc6f9cbb44da011c2b\",\"urls\":[\"bzz-raw://4f089d954b3ecaa26949412fe63e9a184b056562c6c13dd4a0529a5d9a2e685a\",\"dweb:/ipfs/QmVK5iCNAMcEJQxT59bsC5E53JQASDQPU6khHox3d5ZXCn\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611c50806100206000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c806370a08231116100b257806395d89b4111610081578063a9059cbb11610066578063a9059cbb146103e4578063dd62ed3e1461041d578063f2fde38b1461045857610136565b806395d89b41146103a3578063a457c2d7146103ab57610136565b806370a082311461032f578063715018a6146103625780638129fc1c1461036a5780638da5cb5b1461037257610136565b806323b872dd1161010957806339509351116100ee57806339509351146102bb5780634fe41129146102f45780636ebcf607146102fc57610136565b806323b872dd1461025a578063313ce5671461029d57610136565b8063041be19a1461013b57806306fdde0314610176578063095ea7b3146101f357806318160ddd14610240575b600080fd5b6101746004803603604081101561015157600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561048b565b005b61017e6105da565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101b85781810151838201526020016101a0565b50505050905090810190601f1680156101e55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61022c6004803603604081101561020957600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561068f565b604080519115158252519081900360200190f35b6102486106ac565b60408051918252519081900360200190f35b61022c6004803603606081101561027057600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602081013590911690604001356106b2565b6102a5610759565b6040805160ff9092168252519081900360200190f35b61022c600480360360408110156102d157600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610762565b6101746107c3565b6102486004803603602081101561031257600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166108a4565b6102486004803603602081101561034557600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166108b6565b6101746108de565b6101746109de565b61037a610b82565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b61017e610b9e565b61022c600480360360408110156103c157600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610c1d565b61022c600480360360408110156103fa57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610c98565b6102486004803603604081101561043357600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020013516610cac565b6101746004803603602081101561046e57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610ce4565b610493610e6f565b60655473ffffffffffffffffffffffffffffffffffffffff90811691161461051c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb610540610b82565b836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156105aa57600080fd5b505af11580156105be573d6000803e3d6000fd5b505050506040513d60208110156105d457600080fd5b50505050565b609a8054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106845780601f1061065957610100808354040283529160200191610684565b820191906000526020600020905b81548152906001019060200180831161066757829003601f168201915b505050505090505b90565b60006106a361069c610e6f565b8484610e73565b50600192915050565b60995490565b60006106bf848484610fba565b61074f846106cb610e6f565b61074a85604051806060016040528060288152602001611b576028913973ffffffffffffffffffffffffffffffffffffffff8a16600090815260986020526040812090610716610e6f565b73ffffffffffffffffffffffffffffffffffffffff168152602081019190915260400160002054919063ffffffff61119816565b610e73565b5060019392505050565b609c5460ff1690565b60006106a361076f610e6f565b8461074a8560986000610780610e6f565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff61124916565b6107cb610e6f565b60655473ffffffffffffffffffffffffffffffffffffffff90811691161461085457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b61085c610b82565b73ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156108a1573d6000803e3d6000fd5b50565b60976020526000908152604090205481565b73ffffffffffffffffffffffffffffffffffffffff1660009081526097602052604090205490565b6108e6610e6f565b60655473ffffffffffffffffffffffffffffffffffffffff90811691161461096f57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60655460405160009173ffffffffffffffffffffffffffffffffffffffff16907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3606580547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b600054610100900460ff16806109f757506109f76112c4565b80610a05575060005460ff16155b610a5a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611b7f602e913960400191505060405180910390fd5b600054610100900460ff16158015610ac057600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909116610100171660011790555b610ac86112ca565b610b3c6040518060400160405280600a81526020017f5465737420546f6b656e000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f54455354000000000000000000000000000000000000000000000000000000008152506113bc565b610b51336a52b7d2dcc80cd2e40000006114e4565b80156108a157600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16905550565b60655473ffffffffffffffffffffffffffffffffffffffff1690565b609b8054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106845780601f1061065957610100808354040283529160200191610684565b60006106a3610c2a610e6f565b8461074a85604051806060016040528060258152602001611bf66025913960986000610c54610e6f565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff61119816565b60006106a3610ca5610e6f565b8484610fba565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260986020908152604080832093909416825291909152205490565b610cec610e6f565b60655473ffffffffffffffffffffffffffffffffffffffff908116911614610d7557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff8116610de1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611ae96026913960400191505060405180910390fd5b60655460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3606580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b3390565b73ffffffffffffffffffffffffffffffffffffffff8316610edf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180611bd26024913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610f4b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611b0f6022913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff808416600081815260986020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b73ffffffffffffffffffffffffffffffffffffffff8316611026576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180611bad6025913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216611092576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180611ac66023913960400191505060405180910390fd5b61109d8383836114df565b6110ed81604051806060016040528060268152602001611b316026913973ffffffffffffffffffffffffffffffffffffffff8616600090815260976020526040902054919063ffffffff61119816565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260976020526040808220939093559084168152205461112f908263ffffffff61124916565b73ffffffffffffffffffffffffffffffffffffffff80841660008181526097602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115611241576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156112065781810151838201526020016111ee565b50505050905090810190601f1680156112335780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156112bd57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b303b1590565b600054610100900460ff16806112e357506112e36112c4565b806112f1575060005460ff16155b611346576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611b7f602e913960400191505060405180910390fd5b600054610100900460ff161580156113ac57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909116610100171660011790555b6113b4611623565b610b51611735565b600054610100900460ff16806113d557506113d56112c4565b806113e3575060005460ff16155b611438576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611b7f602e913960400191505060405180910390fd5b600054610100900460ff1615801561149e57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909116610100171660011790555b6114a6611623565b6114b083836118c5565b80156114df57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1690555b505050565b73ffffffffffffffffffffffffffffffffffffffff821661156657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b611572600083836114df565b609954611585908263ffffffff61124916565b60995573ffffffffffffffffffffffffffffffffffffffff82166000908152609760205260409020546115be908263ffffffff61124916565b73ffffffffffffffffffffffffffffffffffffffff831660008181526097602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600054610100900460ff168061163c575061163c6112c4565b8061164a575060005460ff16155b61169f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611b7f602e913960400191505060405180910390fd5b600054610100900460ff16158015610b5157600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff9091166101001716600117905580156108a157600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16905550565b600054610100900460ff168061174e575061174e6112c4565b8061175c575060005460ff16155b6117b1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611b7f602e913960400191505060405180910390fd5b600054610100900460ff1615801561181757600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909116610100171660011790555b6000611821610e6f565b606580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35080156108a157600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16905550565b600054610100900460ff16806118de57506118de6112c4565b806118ec575060005460ff16155b611941576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611b7f602e913960400191505060405180910390fd5b600054610100900460ff161580156119a757600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909116610100171660011790555b82516119ba90609a906020860190611a2d565b5081516119ce90609b906020850190611a2d565b50609c80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016601217905580156114df57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611a6e57805160ff1916838001178555611a9b565b82800160010185558215611a9b579182015b82811115611a9b578251825591602001919060010190611a80565b50611aa7929150611aab565b5090565b61068c91905b80821115611aa75760008155600101611ab156fe45524332303a207472616e7366657220746f20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a656445524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220255f2fd1f88bd3081e841056f6bef00a1ffe4d4a87d4474c093214026fb2c60e64736f6c63430006020033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101365760003560e01c806370a08231116100b257806395d89b4111610081578063a9059cbb11610066578063a9059cbb146103e4578063dd62ed3e1461041d578063f2fde38b1461045857610136565b806395d89b41146103a3578063a457c2d7146103ab57610136565b806370a082311461032f578063715018a6146103625780638129fc1c1461036a5780638da5cb5b1461037257610136565b806323b872dd1161010957806339509351116100ee57806339509351146102bb5780634fe41129146102f45780636ebcf607146102fc57610136565b806323b872dd1461025a578063313ce5671461029d57610136565b8063041be19a1461013b57806306fdde0314610176578063095ea7b3146101f357806318160ddd14610240575b600080fd5b6101746004803603604081101561015157600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561048b565b005b61017e6105da565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101b85781810151838201526020016101a0565b50505050905090810190601f1680156101e55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61022c6004803603604081101561020957600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561068f565b604080519115158252519081900360200190f35b6102486106ac565b60408051918252519081900360200190f35b61022c6004803603606081101561027057600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602081013590911690604001356106b2565b6102a5610759565b6040805160ff9092168252519081900360200190f35b61022c600480360360408110156102d157600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610762565b6101746107c3565b6102486004803603602081101561031257600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166108a4565b6102486004803603602081101561034557600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166108b6565b6101746108de565b6101746109de565b61037a610b82565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b61017e610b9e565b61022c600480360360408110156103c157600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610c1d565b61022c600480360360408110156103fa57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610c98565b6102486004803603604081101561043357600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020013516610cac565b6101746004803603602081101561046e57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610ce4565b610493610e6f565b60655473ffffffffffffffffffffffffffffffffffffffff90811691161461051c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb610540610b82565b836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156105aa57600080fd5b505af11580156105be573d6000803e3d6000fd5b505050506040513d60208110156105d457600080fd5b50505050565b609a8054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106845780601f1061065957610100808354040283529160200191610684565b820191906000526020600020905b81548152906001019060200180831161066757829003601f168201915b505050505090505b90565b60006106a361069c610e6f565b8484610e73565b50600192915050565b60995490565b60006106bf848484610fba565b61074f846106cb610e6f565b61074a85604051806060016040528060288152602001611b576028913973ffffffffffffffffffffffffffffffffffffffff8a16600090815260986020526040812090610716610e6f565b73ffffffffffffffffffffffffffffffffffffffff168152602081019190915260400160002054919063ffffffff61119816565b610e73565b5060019392505050565b609c5460ff1690565b60006106a361076f610e6f565b8461074a8560986000610780610e6f565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff61124916565b6107cb610e6f565b60655473ffffffffffffffffffffffffffffffffffffffff90811691161461085457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b61085c610b82565b73ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156108a1573d6000803e3d6000fd5b50565b60976020526000908152604090205481565b73ffffffffffffffffffffffffffffffffffffffff1660009081526097602052604090205490565b6108e6610e6f565b60655473ffffffffffffffffffffffffffffffffffffffff90811691161461096f57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60655460405160009173ffffffffffffffffffffffffffffffffffffffff16907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3606580547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b600054610100900460ff16806109f757506109f76112c4565b80610a05575060005460ff16155b610a5a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611b7f602e913960400191505060405180910390fd5b600054610100900460ff16158015610ac057600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909116610100171660011790555b610ac86112ca565b610b3c6040518060400160405280600a81526020017f5465737420546f6b656e000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f54455354000000000000000000000000000000000000000000000000000000008152506113bc565b610b51336a52b7d2dcc80cd2e40000006114e4565b80156108a157600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16905550565b60655473ffffffffffffffffffffffffffffffffffffffff1690565b609b8054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106845780601f1061065957610100808354040283529160200191610684565b60006106a3610c2a610e6f565b8461074a85604051806060016040528060258152602001611bf66025913960986000610c54610e6f565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff61119816565b60006106a3610ca5610e6f565b8484610fba565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260986020908152604080832093909416825291909152205490565b610cec610e6f565b60655473ffffffffffffffffffffffffffffffffffffffff908116911614610d7557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff8116610de1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611ae96026913960400191505060405180910390fd5b60655460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3606580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b3390565b73ffffffffffffffffffffffffffffffffffffffff8316610edf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180611bd26024913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610f4b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611b0f6022913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff808416600081815260986020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b73ffffffffffffffffffffffffffffffffffffffff8316611026576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180611bad6025913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216611092576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180611ac66023913960400191505060405180910390fd5b61109d8383836114df565b6110ed81604051806060016040528060268152602001611b316026913973ffffffffffffffffffffffffffffffffffffffff8616600090815260976020526040902054919063ffffffff61119816565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260976020526040808220939093559084168152205461112f908263ffffffff61124916565b73ffffffffffffffffffffffffffffffffffffffff80841660008181526097602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115611241576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156112065781810151838201526020016111ee565b50505050905090810190601f1680156112335780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156112bd57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b303b1590565b600054610100900460ff16806112e357506112e36112c4565b806112f1575060005460ff16155b611346576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611b7f602e913960400191505060405180910390fd5b600054610100900460ff161580156113ac57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909116610100171660011790555b6113b4611623565b610b51611735565b600054610100900460ff16806113d557506113d56112c4565b806113e3575060005460ff16155b611438576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611b7f602e913960400191505060405180910390fd5b600054610100900460ff1615801561149e57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909116610100171660011790555b6114a6611623565b6114b083836118c5565b80156114df57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1690555b505050565b73ffffffffffffffffffffffffffffffffffffffff821661156657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b611572600083836114df565b609954611585908263ffffffff61124916565b60995573ffffffffffffffffffffffffffffffffffffffff82166000908152609760205260409020546115be908263ffffffff61124916565b73ffffffffffffffffffffffffffffffffffffffff831660008181526097602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600054610100900460ff168061163c575061163c6112c4565b8061164a575060005460ff16155b61169f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611b7f602e913960400191505060405180910390fd5b600054610100900460ff16158015610b5157600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff9091166101001716600117905580156108a157600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16905550565b600054610100900460ff168061174e575061174e6112c4565b8061175c575060005460ff16155b6117b1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611b7f602e913960400191505060405180910390fd5b600054610100900460ff1615801561181757600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909116610100171660011790555b6000611821610e6f565b606580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35080156108a157600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16905550565b600054610100900460ff16806118de57506118de6112c4565b806118ec575060005460ff16155b611941576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611b7f602e913960400191505060405180910390fd5b600054610100900460ff161580156119a757600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909116610100171660011790555b82516119ba90609a906020860190611a2d565b5081516119ce90609b906020850190611a2d565b50609c80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016601217905580156114df57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611a6e57805160ff1916838001178555611a9b565b82800160010185558215611a9b579182015b82811115611a9b578251825591602001919060010190611a80565b50611aa7929150611aab565b5090565b61068c91905b80821115611aa75760008155600101611ab156fe45524332303a207472616e7366657220746f20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a656445524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220255f2fd1f88bd3081e841056f6bef00a1ffe4d4a87d4474c093214026fb2c60e64736f6c63430006020033",
  "sourceMap": "218:550:1:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;218:550:1;;;;;;;",
  "deployedSourceMap": "218:550:1:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;218:550:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;619:147;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;619:147:1;;;;;;;;;:::i;:::-;;2708:81:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2708:81:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4744:166;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4744:166:0;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3751:98;;;:::i;:::-;;;;;;;;;;;;;;;;5370:317;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5370:317:0;;;;;;;;;;;;;;;;;;:::i;3610:81::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6082:215;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6082:215:0;;;;;;;;;:::i;502:111:1:-;;;:::i;1722:45:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1722:45:0;;;;:::i;3907:117::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3907:117:0;;;;:::i;1894:145:6:-;;;:::i;298:198:1:-;;;:::i;1271:77:6:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2902:85:0;;;:::i;6784:266::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6784:266:0;;;;;;;;;:::i;4227:172::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4227:172:0;;;;;;;;;:::i;4457:149::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4457:149:0;;;;;;;;;;;:::i;2188:240:6:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2188:240:6;;;;:::i;619:147:1:-;1485:12:6;:10;:12::i;:::-;1475:6;;:22;:6;;;:22;;;1467:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;725:6:1::1;708:33;;;742:7;:5;:7::i;:::-;751;708:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27::::0;20:12:::1;5:2;708:51:1;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;708:51:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26::::0;19:12:::1;2:2;-1:-1:::0;;;;619:147:1:o;2708:81:0:-;2777:5;2770:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2745:13;;2770:12;;2777:5;;2770:12;;2777:5;2770:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2708:81;;:::o;4744:166::-;4827:4;4843:39;4852:12;:10;:12::i;:::-;4866:7;4875:6;4843:8;:39::i;:::-;-1:-1:-1;4899:4:0;4744:166;;;;:::o;3751:98::-;3830:12;;3751:98;:::o;5370:317::-;5476:4;5492:36;5502:6;5510:9;5521:6;5492:9;:36::i;:::-;5538:121;5547:6;5555:12;:10;:12::i;:::-;5569:89;5607:6;5569:89;;;;;;;;;;;;;;;;;:19;;;;;;;:11;:19;;;;;;5589:12;:10;:12::i;:::-;5569:33;;;;;;;;;;;;;-1:-1:-1;5569:33:0;;;:89;;:37;:89;:::i;:::-;5538:8;:121::i;:::-;-1:-1:-1;5676:4:0;5370:317;;;;;:::o;3610:81::-;3675:9;;;;3610:81;:::o;6082:215::-;6170:4;6186:83;6195:12;:10;:12::i;:::-;6209:7;6218:50;6257:10;6218:11;:25;6230:12;:10;:12::i;:::-;6218:25;;;;;;;;;;;;;;;;;;-1:-1:-1;6218:25:0;;;:34;;;;;;;;;;;:50;:38;:50;:::i;502:111:1:-;1485:12:6;:10;:12::i;:::-;1475:6;;:22;:6;;;:22;;;1467:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;566:7:1::1;:5;:7::i;:::-;558:25;;:48;584:21;558:48;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;558:48:1;502:111::o:0;1722:45:0:-;;;;;;;;;;;;;:::o;3907:117::-;3999:18;;3973:7;3999:18;;;:9;:18;;;;;;;3907:117::o;1894:145:6:-;1485:12;:10;:12::i;:::-;1475:6;;:22;:6;;;:22;;;1467:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1984:6:::1;::::0;1963:40:::1;::::0;2000:1:::1;::::0;1963:40:::1;1984:6;::::0;1963:40:::1;::::0;2000:1;;1963:40:::1;2013:6;:19:::0;;;::::1;::::0;;1894:145::o;298:198:1:-;1024:12:5;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:5;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;1225:18;1198:19;;;;;;1225:18;1213:4;1225:18;;;1170:80;349:16:1::1;:14;:16::i;:::-;375:34;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;::::0;:12:::1;:34::i;:::-;464:25;470:10;482:6;464:5;:25::i;:::-;1268:14:5::0;1264:55;;;1307:5;1292:20;;;;;;298:198:1;:::o;1271:77:6:-;1335:6;;;;1271:77;:::o;2902:85:0:-;2973:7;2966:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2941:13;;2966:14;;2973:7;;2966:14;;2973:7;2966:14;;;;;;;;;;;;;;;;;;;;;;;;6784:266;6877:4;6893:129;6902:12;:10;:12::i;:::-;6916:7;6925:96;6964:15;6925:96;;;;;;;;;;;;;;;;;:11;:25;6937:12;:10;:12::i;:::-;6925:25;;;;;;;;;;;;;;;;;;-1:-1:-1;6925:25:0;;;:34;;;;;;;;;;;:96;;:38;:96;:::i;4227:172::-;4313:4;4329:42;4339:12;:10;:12::i;:::-;4353:9;4364:6;4329:9;:42::i;4457:149::-;4572:18;;;;4546:7;4572:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4457:149::o;2188:240:6:-;1485:12;:10;:12::i;:::-;1475:6;;:22;:6;;;:22;;;1467:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:22:::1;::::0;::::1;2268:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2377:6;::::0;2356:38:::1;::::0;::::1;::::0;;::::1;::::0;2377:6:::1;::::0;2356:38:::1;::::0;2377:6:::1;::::0;2356:38:::1;2404:6;:17:::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;2188:240::o;931:104:4:-;1018:10;931:104;:::o;9848:340:0:-;9949:19;;;9941:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10027:21;;;10019:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10098:18;;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10149:32;;;;;;;;;;;;;;;;;9848:340;;;:::o;7524:530::-;7629:20;;;7621:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7709:23;;;7701:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7783:47;7804:6;7812:9;7823:6;7783:20;:47::i;:::-;7861:71;7883:6;7861:71;;;;;;;;;;;;;;;;;:17;;;;;;;:9;:17;;;;;;;:71;;:21;:71;:::i;:::-;7841:17;;;;;;;;:9;:17;;;;;;:91;;;;7965:20;;;;;;;:32;;7990:6;7965:32;:24;:32;:::i;:::-;7942:20;;;;;;;;:9;:20;;;;;;;;;:55;;;;8012:35;;;;;;;7942:20;;8012:35;;;;;;;;;;;;;7524:530;;;:::o;1692:187:7:-;1778:7;1813:12;1805:6;;;;1797:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1797:29:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1848:5:7;;;1692:187::o;834:176::-;892:7;923:5;;;946:6;;;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:7:o;1409:498:5:-;1820:4;1864:17;1895:7;1409:498;:::o;867:126:6:-;1024:12:5;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:5;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;1225:18;1198:19;;;;;;1225:18;1213:4;1225:18;;;1170:80;924:26:6::1;:24;:26::i;:::-;960;:24;:26::i;2285:174:0:-:0;1024:12:5;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:5;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;1225:18;1198:19;;;;;;1225:18;1213:4;1225:18;;;1170:80;2380:26:0::1;:24;:26::i;:::-;2416:36;2439:4;2445:6;2416:22;:36::i;:::-;1268:14:5::0;1264:55;;;1307:5;1292:20;;;;;;1264:55;2285:174:0;;;:::o;8324:370::-;8407:21;;;8399:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8475:49;8504:1;8508:7;8517:6;8475:20;:49::i;:::-;8550:12;;:24;;8567:6;8550:24;:16;:24;:::i;:::-;8535:12;:39;8605:18;;;;;;;:9;:18;;;;;;:30;;8628:6;8605:30;:22;:30;:::i;:::-;8584:18;;;;;;;:9;:18;;;;;;;;:51;;;;8650:37;;;;;;;8584:18;;;;8650:37;;;;;;;;;;8324:370;;:::o;858:66:4:-;1024:12:5;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:5;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;1225:18;1198:19;;;;;;1225:18;1213:4;1225:18;;;1268:14;1264:55;;;1307:5;1292:20;;;;;;858:66:4;:::o;999:195:6:-;1024:12:5;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:5;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;1225:18;1198:19;;;;;;1225:18;1213:4;1225:18;;;1170:80;1068:17:6::1;1088:12;:10;:12::i;:::-;1110:6;:18:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;;1143:43:::1;::::0;1110:18;;-1:-1:-1;1110:18:6;-1:-1:-1;;1143:43:6::1;::::0;-1:-1:-1;;1143:43:6::1;1256:1:5;1268:14:::0;1264:55;;;1307:5;1292:20;;;;;;999:195:6;:::o;2465:177:0:-;1024:12:5;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:5;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;1225:18;1198:19;;;;;;1225:18;1213:4;1225:18;;;1170:80;2572:12:0;;::::1;::::0;:5:::1;::::0;:12:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2594:16:0;;::::1;::::0;:7:::1;::::0;:16:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2620:9:0::1;:14:::0;;;::::1;2632:2;2620:14;::::0;;1264:55:5;;;;1307:5;1292:20;;;;;;2465:177:0;;;:::o;218:550:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;218:550:1;;;-1:-1:-1;218:550:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity =0.6.2;\n\nimport '@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol';\nimport './ERC20UpgradeSafe.sol';\nimport '@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol';\n\ncontract TestToken is Initializable, OwnableUpgradeSafe, ERC20UpgradeSafe {\n    function initialize() public initializer {\n        __Ownable_init();\n        __ERC20_init('Test Token', 'TEST');\n        // Decimals are set to 18 by default\n        _mint(msg.sender, 100e24);\n    }\n\n    function extractETHIfStuck() public onlyOwner {\n        payable(owner()).transfer(address(this).balance);\n    }\n\n    function extractTokenIfStuck(address _token, uint256 _amount) public onlyOwner {\n        ERC20UpgradeSafe(_token).transfer(owner(), _amount);\n    }\n}",
  "sourcePath": "C:/Users/merun/Desktop/yeld & crypto/yeld-contracts/contracts/TestToken.sol",
  "ast": {
    "absolutePath": "/C/Users/merun/Desktop/yeld & crypto/yeld-contracts/contracts/TestToken.sol",
    "exportedSymbols": {
      "TestToken": [
        584
      ]
    },
    "id": 585,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 516,
        "literals": [
          "solidity",
          "=",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol",
        "id": 517,
        "nodeType": "ImportDirective",
        "scope": 585,
        "sourceUnit": 2177,
        "src": "25:79:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/merun/Desktop/yeld & crypto/yeld-contracts/contracts/ERC20UpgradeSafe.sol",
        "file": "./ERC20UpgradeSafe.sol",
        "id": 518,
        "nodeType": "ImportDirective",
        "scope": 585,
        "sourceUnit": 515,
        "src": "105:32:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol",
        "id": 519,
        "nodeType": "ImportDirective",
        "scope": 585,
        "sourceUnit": 2053,
        "src": "138:78:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 520,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2052,
              "src": "240:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$2052",
                "typeString": "contract Initializable"
              }
            },
            "id": 521,
            "nodeType": "InheritanceSpecifier",
            "src": "240:13:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 522,
              "name": "OwnableUpgradeSafe",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2176,
              "src": "255:18:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OwnableUpgradeSafe_$2176",
                "typeString": "contract OwnableUpgradeSafe"
              }
            },
            "id": 523,
            "nodeType": "InheritanceSpecifier",
            "src": "255:18:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 524,
              "name": "ERC20UpgradeSafe",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 514,
              "src": "275:16:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20UpgradeSafe_$514",
                "typeString": "contract ERC20UpgradeSafe"
              }
            },
            "id": 525,
            "nodeType": "InheritanceSpecifier",
            "src": "275:16:1"
          }
        ],
        "contractDependencies": [
          514,
          1982,
          2052,
          2176,
          2432
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 584,
        "linearizedBaseContracts": [
          584,
          514,
          2432,
          2176,
          1982,
          2052
        ],
        "name": "TestToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 544,
              "nodeType": "Block",
              "src": "339:157:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 530,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2080,
                      "src": "349:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "349:16:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 532,
                  "nodeType": "ExpressionStatement",
                  "src": "349:16:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "5465737420546f6b656e",
                        "id": 534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "388:12:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_81e8ad438398ab0d4a2a7ecb159490c091bb27c67ace5181f70084e30fadaea2",
                          "typeString": "literal_string \"Test Token\""
                        },
                        "value": "Test Token"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54455354",
                        "id": 535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "402:6:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_852daa74cc3c31fe64542bb9b8764cfb91cc30f9acf9389071ffb44a9eefde46",
                          "typeString": "literal_string \"TEST\""
                        },
                        "value": "TEST"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_81e8ad438398ab0d4a2a7ecb159490c091bb27c67ace5181f70084e30fadaea2",
                          "typeString": "literal_string \"Test Token\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_852daa74cc3c31fe64542bb9b8764cfb91cc30f9acf9389071ffb44a9eefde46",
                          "typeString": "literal_string \"TEST\""
                        }
                      ],
                      "id": 533,
                      "name": "__ERC20_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "375:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "375:34:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 537,
                  "nodeType": "ExpressionStatement",
                  "src": "375:34:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 539,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "470:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "470:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "313030653234",
                        "id": 541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "482:6:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000000000"
                        },
                        "value": "100e24"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000000000"
                        }
                      ],
                      "id": 538,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 390,
                      "src": "464:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "464:25:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 543,
                  "nodeType": "ExpressionStatement",
                  "src": "464:25:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8129fc1c",
            "id": 545,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 528,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 527,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2026,
                  "src": "327:11:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "327:11:1"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 526,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "317:2:1"
            },
            "returnParameters": {
              "id": 529,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "339:0:1"
            },
            "scope": 584,
            "src": "298:198:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 563,
              "nodeType": "Block",
              "src": "548:65:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 558,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "592:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$584",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$584",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 557,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "584:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 556,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "584:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "584:13:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "584:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 552,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2111,
                              "src": "566:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 553,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "566:7:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "558:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 550,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "558:8:1",
                            "stateMutability": "payable",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "558:16:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 555,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "558:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "558:48:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 562,
                  "nodeType": "ExpressionStatement",
                  "src": "558:48:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "4fe41129",
            "id": 564,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 548,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 547,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2123,
                  "src": "538:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "538:9:1"
              }
            ],
            "name": "extractETHIfStuck",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 546,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "528:2:1"
            },
            "returnParameters": {
              "id": 549,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "548:0:1"
            },
            "scope": 584,
            "src": "502:111:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 582,
              "nodeType": "Block",
              "src": "698:68:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 577,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2111,
                          "src": "742:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "742:7:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 579,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 568,
                        "src": "751:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 574,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 566,
                            "src": "725:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 573,
                          "name": "ERC20UpgradeSafe",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 514,
                          "src": "708:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20UpgradeSafe_$514_$",
                            "typeString": "type(contract ERC20UpgradeSafe)"
                          }
                        },
                        "id": 575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "708:24:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20UpgradeSafe_$514",
                          "typeString": "contract ERC20UpgradeSafe"
                        }
                      },
                      "id": 576,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 142,
                      "src": "708:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "708:51:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 581,
                  "nodeType": "ExpressionStatement",
                  "src": "708:51:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "041be19a",
            "id": 583,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 571,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 570,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2123,
                  "src": "688:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "688:9:1"
              }
            ],
            "name": "extractTokenIfStuck",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 569,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 566,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 583,
                  "src": "648:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 565,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "648:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 568,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 583,
                  "src": "664:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 567,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "664:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "647:33:1"
            },
            "returnParameters": {
              "id": 572,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "698:0:1"
            },
            "scope": 584,
            "src": "619:147:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 585,
        "src": "218:550:1"
      }
    ],
    "src": "0:768:1"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/C/Users/merun/Desktop/yeld & crypto/yeld-contracts/contracts/TestToken.sol",
      "exportedSymbols": {
        "TestToken": [
          584
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "=",
            "0.6",
            ".2"
          ]
        },
        "id": 516,
        "name": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "attributes": {
          "SourceUnit": 2177,
          "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol",
          "file": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol",
          "scope": 585,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 517,
        "name": "ImportDirective",
        "src": "25:79:1"
      },
      {
        "attributes": {
          "SourceUnit": 515,
          "absolutePath": "/C/Users/merun/Desktop/yeld & crypto/yeld-contracts/contracts/ERC20UpgradeSafe.sol",
          "file": "./ERC20UpgradeSafe.sol",
          "scope": 585,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 518,
        "name": "ImportDirective",
        "src": "105:32:1"
      },
      {
        "attributes": {
          "SourceUnit": 2053,
          "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol",
          "file": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol",
          "scope": 585,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 519,
        "name": "ImportDirective",
        "src": "138:78:1"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            514,
            1982,
            2052,
            2176,
            2432
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            584,
            514,
            2432,
            2176,
            1982,
            2052
          ],
          "name": "TestToken",
          "scope": 585
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Initializable",
                  "referencedDeclaration": 2052,
                  "type": "contract Initializable"
                },
                "id": 520,
                "name": "UserDefinedTypeName",
                "src": "240:13:1"
              }
            ],
            "id": 521,
            "name": "InheritanceSpecifier",
            "src": "240:13:1"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "OwnableUpgradeSafe",
                  "referencedDeclaration": 2176,
                  "type": "contract OwnableUpgradeSafe"
                },
                "id": 522,
                "name": "UserDefinedTypeName",
                "src": "255:18:1"
              }
            ],
            "id": 523,
            "name": "InheritanceSpecifier",
            "src": "255:18:1"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC20UpgradeSafe",
                  "referencedDeclaration": 514,
                  "type": "contract ERC20UpgradeSafe"
                },
                "id": 524,
                "name": "UserDefinedTypeName",
                "src": "275:16:1"
              }
            ],
            "id": 525,
            "name": "InheritanceSpecifier",
            "src": "275:16:1"
          },
          {
            "attributes": {
              "documentation": null,
              "functionSelector": "8129fc1c",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "initialize",
              "overrides": null,
              "scope": 584,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 526,
                "name": "ParameterList",
                "src": "317:2:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 529,
                "name": "ParameterList",
                "src": "339:0:1"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 2026,
                      "type": "modifier ()",
                      "value": "initializer"
                    },
                    "id": 527,
                    "name": "Identifier",
                    "src": "327:11:1"
                  }
                ],
                "id": 528,
                "name": "ModifierInvocation",
                "src": "327:11:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2080,
                              "type": "function ()",
                              "value": "__Ownable_init"
                            },
                            "id": 530,
                            "name": "Identifier",
                            "src": "349:14:1"
                          }
                        ],
                        "id": 531,
                        "name": "FunctionCall",
                        "src": "349:16:1"
                      }
                    ],
                    "id": 532,
                    "name": "ExpressionStatement",
                    "src": "349:16:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_81e8ad438398ab0d4a2a7ecb159490c091bb27c67ace5181f70084e30fadaea2",
                                  "typeString": "literal_string \"Test Token\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_852daa74cc3c31fe64542bb9b8764cfb91cc30f9acf9389071ffb44a9eefde46",
                                  "typeString": "literal_string \"TEST\""
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 54,
                              "type": "function (string memory,string memory)",
                              "value": "__ERC20_init"
                            },
                            "id": 533,
                            "name": "Identifier",
                            "src": "375:12:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "5465737420546f6b656e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Test Token\"",
                              "value": "Test Token"
                            },
                            "id": 534,
                            "name": "Literal",
                            "src": "388:12:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "54455354",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"TEST\"",
                              "value": "TEST"
                            },
                            "id": 535,
                            "name": "Literal",
                            "src": "402:6:1"
                          }
                        ],
                        "id": 536,
                        "name": "FunctionCall",
                        "src": "375:34:1"
                      }
                    ],
                    "id": 537,
                    "name": "ExpressionStatement",
                    "src": "375:34:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_rational_100000000000000000000000000_by_1",
                                  "typeString": "int_const 100000000000000000000000000"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 390,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 538,
                            "name": "Identifier",
                            "src": "464:5:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 539,
                                "name": "Identifier",
                                "src": "470:3:1"
                              }
                            ],
                            "id": 540,
                            "name": "MemberAccess",
                            "src": "470:10:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "313030653234",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 100000000000000000000000000",
                              "value": "100e24"
                            },
                            "id": 541,
                            "name": "Literal",
                            "src": "482:6:1"
                          }
                        ],
                        "id": 542,
                        "name": "FunctionCall",
                        "src": "464:25:1"
                      }
                    ],
                    "id": 543,
                    "name": "ExpressionStatement",
                    "src": "464:25:1"
                  }
                ],
                "id": 544,
                "name": "Block",
                "src": "339:157:1"
              }
            ],
            "id": 545,
            "name": "FunctionDefinition",
            "src": "298:198:1"
          },
          {
            "attributes": {
              "documentation": null,
              "functionSelector": "4fe41129",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "extractETHIfStuck",
              "overrides": null,
              "scope": 584,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 546,
                "name": "ParameterList",
                "src": "528:2:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 549,
                "name": "ParameterList",
                "src": "548:0:1"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 2123,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 547,
                    "name": "Identifier",
                    "src": "538:9:1"
                  }
                ],
                "id": 548,
                "name": "ModifierInvocation",
                "src": "538:9:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "transfer",
                              "referencedDeclaration": null,
                              "type": "function (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address payable)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "address",
                                          "stateMutability": "payable",
                                          "type": null
                                        },
                                        "id": 550,
                                        "name": "ElementaryTypeName",
                                        "src": "558:8:1"
                                      }
                                    ],
                                    "id": 551,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "558:8:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "address",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            null
                                          ],
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2111,
                                          "type": "function () view returns (address)",
                                          "value": "owner"
                                        },
                                        "id": 552,
                                        "name": "Identifier",
                                        "src": "566:5:1"
                                      }
                                    ],
                                    "id": 553,
                                    "name": "FunctionCall",
                                    "src": "566:7:1"
                                  }
                                ],
                                "id": 554,
                                "name": "FunctionCall",
                                "src": "558:16:1"
                              }
                            ],
                            "id": 555,
                            "name": "MemberAccess",
                            "src": "558:25:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "balance",
                              "referencedDeclaration": null,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_TestToken_$584",
                                          "typeString": "contract TestToken"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "address",
                                          "type": null
                                        },
                                        "id": 556,
                                        "name": "ElementaryTypeName",
                                        "src": "584:7:1"
                                      }
                                    ],
                                    "id": 557,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "584:7:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -28,
                                      "type": "contract TestToken",
                                      "value": "this"
                                    },
                                    "id": 558,
                                    "name": "Identifier",
                                    "src": "592:4:1"
                                  }
                                ],
                                "id": 559,
                                "name": "FunctionCall",
                                "src": "584:13:1"
                              }
                            ],
                            "id": 560,
                            "name": "MemberAccess",
                            "src": "584:21:1"
                          }
                        ],
                        "id": 561,
                        "name": "FunctionCall",
                        "src": "558:48:1"
                      }
                    ],
                    "id": 562,
                    "name": "ExpressionStatement",
                    "src": "558:48:1"
                  }
                ],
                "id": 563,
                "name": "Block",
                "src": "548:65:1"
              }
            ],
            "id": 564,
            "name": "FunctionDefinition",
            "src": "502:111:1"
          },
          {
            "attributes": {
              "documentation": null,
              "functionSelector": "041be19a",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "extractTokenIfStuck",
              "overrides": null,
              "scope": 584,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_token",
                      "overrides": null,
                      "scope": 583,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 565,
                        "name": "ElementaryTypeName",
                        "src": "648:7:1"
                      }
                    ],
                    "id": 566,
                    "name": "VariableDeclaration",
                    "src": "648:14:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_amount",
                      "overrides": null,
                      "scope": 583,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 567,
                        "name": "ElementaryTypeName",
                        "src": "664:7:1"
                      }
                    ],
                    "id": 568,
                    "name": "VariableDeclaration",
                    "src": "664:15:1"
                  }
                ],
                "id": 569,
                "name": "ParameterList",
                "src": "647:33:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 572,
                "name": "ParameterList",
                "src": "698:0:1"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 2123,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 570,
                    "name": "Identifier",
                    "src": "688:9:1"
                  }
                ],
                "id": 571,
                "name": "ModifierInvocation",
                "src": "688:9:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "transfer",
                              "referencedDeclaration": 142,
                              "type": "function (address,uint256) external returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "contract ERC20UpgradeSafe",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 514,
                                      "type": "type(contract ERC20UpgradeSafe)",
                                      "value": "ERC20UpgradeSafe"
                                    },
                                    "id": 573,
                                    "name": "Identifier",
                                    "src": "708:16:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 566,
                                      "type": "address",
                                      "value": "_token"
                                    },
                                    "id": 574,
                                    "name": "Identifier",
                                    "src": "725:6:1"
                                  }
                                ],
                                "id": 575,
                                "name": "FunctionCall",
                                "src": "708:24:1"
                              }
                            ],
                            "id": 576,
                            "name": "MemberAccess",
                            "src": "708:33:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2111,
                                  "type": "function () view returns (address)",
                                  "value": "owner"
                                },
                                "id": 577,
                                "name": "Identifier",
                                "src": "742:5:1"
                              }
                            ],
                            "id": 578,
                            "name": "FunctionCall",
                            "src": "742:7:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 568,
                              "type": "uint256",
                              "value": "_amount"
                            },
                            "id": 579,
                            "name": "Identifier",
                            "src": "751:7:1"
                          }
                        ],
                        "id": 580,
                        "name": "FunctionCall",
                        "src": "708:51:1"
                      }
                    ],
                    "id": 581,
                    "name": "ExpressionStatement",
                    "src": "708:51:1"
                  }
                ],
                "id": 582,
                "name": "Block",
                "src": "698:68:1"
              }
            ],
            "id": 583,
            "name": "FunctionDefinition",
            "src": "619:147:1"
          }
        ],
        "id": 584,
        "name": "ContractDefinition",
        "src": "218:550:1"
      }
    ],
    "id": 585,
    "name": "SourceUnit",
    "src": "0:768:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.2+commit.bacdbe57.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-01-30T18:33:37.747Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}